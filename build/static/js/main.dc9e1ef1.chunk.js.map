{"version":3,"sources":["components/DisplayTitle.js","components/FilterForm.js","components/Form.js","components/Number.js","components/Numbers.js","services/persons.js","App.js","index.js"],"names":["DisplayTitle","text","FilterForm","handleOnChangeSeach","newFilter","onChange","value","Form","props","onSubmit","handleOnSubmit","handleOnChangeName","newName","handleOnChangeNumber","newNumber","type","Number","person","handleDeletePhone","name","number","onClick","Numbers","persons","filter","toLowerCase","indexOf","map","id","baseUrl","exportedObject","getAll","axios","get","then","response","data","create","newObject","post","deletePerson","delete","update","put","Notification","notificationClass","message","className","App","useState","setPersons","setNewName","setNewNumber","setNewFilter","notificationMessage","setNotificationMessage","useEffect","personService","initialPersons","event","target","preventDefault","personObject","length","personExists","find","p","window","confirm","returnedPerson","setTimeout","createPerson","concat","catch","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dc9e1ef1.chunk.js","sourcesContent":["import React from 'react';\n\nconst DisplayTitle = ({ text }) =>\n    <h2>{text}</h2>\n\nexport default DisplayTitle","import React from 'react';\n\nconst FilterForm = ({ handleOnChangeSeach, newFilter }) => {\n    return (\n        <form>\n            filter shown with: <input onChange={handleOnChangeSeach} value={newFilter} />\n        </form>\n    )\n}\n\nexport default FilterForm","import React from 'react';\n\nconst Form = props => {\n    return (\n        <form onSubmit={props.handleOnSubmit} >\n            <div>\n                name: <input onChange={props.handleOnChangeName} value={props.newName} />\n            </div>\n            <div>\n                number: <input onChange={props.handleOnChangeNumber} value={props.newNumber} />\n            </div>\n            <div>\n                <button type=\"submit\">add</button>\n            </div>\n        </form>\n    )\n}\n\nexport default Form","import React from 'react';\n\nconst Number = ({ person, handleDeletePhone }) =>\n    <div>\n        {person.name} {person.number}\n        <button onClick={handleDeletePhone}>delete</button>\n    </div>\n\nexport default Number","import React from 'react';\nimport DisplayTitle from './DisplayTitle';\nimport Number from './Number';\n\nconst Numbers = ({ persons, filter, handleDeletePhone }) => {\n    return (\n        <>\n            <DisplayTitle text=\"Numbers\" />\n            {persons.filter(person => {\n                return person.name.toLowerCase().indexOf(filter.toLowerCase()) >= 0\n            }).map(person =>\n                <Number key={person.id} person={person} handleDeletePhone={() => handleDeletePhone(person.id)} />\n            )}\n        </>\n    )\n}\n\nexport default Numbers","import axios from 'axios'\nconst baseUrl = 'http://localhost:3001/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst deletePerson = id => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst exportedObject = { getAll, create, deletePerson, update }\n\nexport default exportedObject","import React, { useState, useEffect } from 'react'\nimport DisplayTitle from './components/DisplayTitle'\nimport FilterForm from './components/FilterForm'\nimport Form from './components/Form'\nimport Numbers from './components/Numbers'\nimport personService from './services/persons'\n\nconst Notification = ({ notificationClass, message }) => {\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div className={notificationClass}>\n            {message}\n        </div>\n    )\n}\n\nconst App = () => {\n    const [persons, setPersons] = useState([])\n    const [newName, setNewName] = useState('')\n    const [newNumber, setNewNumber] = useState('')\n    const [newFilter, setNewFilter] = useState('')\n    const [notificationMessage, setNotificationMessage] = useState({})\n\n    const initialPhonebookHook = () => {\n        personService.getAll()\n            .then(initialPersons => {\n                setPersons(initialPersons)\n            })\n    }\n\n    useEffect(initialPhonebookHook, [])\n\n    const personAlreadyExists = () => {\n        return persons.find(p => p.name === newName)\n    }\n\n    const handleOnSubmit = event => {\n        event.preventDefault()\n        const personObject = {\n            id: persons.length + 1,\n            name: newName,\n            number: newNumber\n        }\n\n        const personExists = personAlreadyExists()\n        if (!personExists) {\n            personService.create(personObject)\n                .then(createPerson => {\n                    setPersons(persons.concat(personObject))\n                    setNewName('')\n                    setNewNumber('')\n                    setNotificationMessage({ className: 'success', message: `Added '${personObject.name}'` })\n                    setTimeout(() => {\n                        setNotificationMessage({})\n                    }, 5000)\n                })\n        } else {\n            window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)\n            personService.update(personExists.id, personObject)\n                .then(returnedPerson => {\n                    setPersons(persons.map(p => p.id !== personExists.id ? p : returnedPerson))\n                    setNewName('')\n                    setNewNumber('')\n                    setNotificationMessage({ className: 'success', message: `Updated '${personExists.name}'` })\n                    setTimeout(() => {\n                        setNotificationMessage({})\n                    }, 5000)\n                })\n        }\n    }\n\n    const handleOnChangeName = event => {\n        setNewName(event.target.value)\n    }\n\n    const handleOnChangeNumber = event => {\n        setNewNumber(event.target.value)\n    }\n\n    const handleOnChangeSeach = event => {\n        setNewFilter(event.target.value)\n    }\n\n    const handleDeletePhone = id => {\n        const person = persons.find(p => p.id === id)\n        const confirm = window.confirm('Delete ' + person.name)\n        if (confirm === true) {\n            personService.deletePerson(id)\n                .then(deletePerson => {\n                    setPersons(persons.filter(p => p.id !== id))\n                }).catch(error => {\n                    setNotificationMessage({ className: 'error', message: `Person '${person.name}' was already removed from server` })\n                    setTimeout(() => {\n                        setNotificationMessage({})\n                    }, 5000)\n                })\n        }\n    }\n\n    return (\n        <div>\n            <DisplayTitle text=\"Phonebook\" />\n            <Notification message={notificationMessage.message} notificationClass={notificationMessage.className} />\n            <FilterForm handleOnChangeSeach={handleOnChangeSeach} newFilter={newFilter} />\n            <Form handleOnSubmit={handleOnSubmit} handleOnChangeName={handleOnChangeName} handleOnChangeNumber={handleOnChangeNumber} newName={newName} newNumber={newNumber} />\n            <Numbers persons={persons} filter={newFilter} handleDeletePhone={handleDeletePhone} />\n        </div>\n    )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}